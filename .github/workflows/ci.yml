name: CI

on:
  push:
     branches:
       - dev
  workflow_dispatch:

jobs:
  build:
    name: SonarQube and Trivy Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis relevancy
      
      - name: SonarQube scanning
        uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        continue-on-error: true  # Continue even if SonarQube fails
      
      # Uncomment to fail the job if Quality Gate fails
      # - name: SonarQube Quality Gate
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      - name: Install Trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.57.0/trivy_0.57.0_Linux-64bit.tar.gz
          tar -xzf trivy_0.57.0_Linux-64bit.tar.gz
          sudo mv trivy /usr/local/bin/

      - name: Set Up Trivy Cache
        id: trivy-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy/db
          key: ${{ runner.os }}-trivy-db-cache-v0.57.0

      - name: Download Trivy Offline Database
        if: steps.trivy-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/.cache/trivy/db
          oras pull ghcr.io/aquasecurity/trivy-db:2
          tar -xvf db.tar.gz -C ~/.cache/trivy/db

      - name: Trivy scanning
        run: |
          trivy fs --severity HIGH,CRITICAL ./app.py
